openapi: 3.0.3
info:
  title: Bank Support Chat Manager API
  version: v1

servers:
  - url: http://localhost:8081/v1
    description: Development server

paths:
  /getFreeHandsBtnAvailability:
    post:
      description: Checks free hands availability.
      parameters:
        - $ref: "#/components/parameters/XRequestIDHeader"
      responses:
        '200':
          description: Checks availability result.
          content:
            application/json:
             schema:
               $ref: "#/components/schemas/PostGetFreeHandsBtnAvailability"

  /freeHands:
    post:
      description: Sets availability for new clients.
      parameters:
        - $ref: "#/components/parameters/XRequestIDHeader"
      responses:
        '200':
          description: Sets availability for new clients result.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostFreeHands"

  /getChats:
    post:
      description: Get open problems assigned to manager
      parameters:
        - $ref: "#/components/parameters/XRequestIDHeader"
      responses:
        '200':
          description: List of chats with problems
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostGetChats"

  /getChatHistory:
    post:
      description: Get chat history.
      parameters:
        - $ref: "#/components/parameters/XRequestIDHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetChatHistoryRequest"
      responses:
        '200':
          description: Messages list.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetChatHistoryResponse"

security:
  - bearerAuth: [ ]

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT


  parameters:
    XRequestIDHeader:
      in: header
      name: X-Request-ID
      schema:
        type: string
        format: uuid
        x-go-type: types.RequestID
        x-go-type-import:
          path: "github.com/Pickausernaame/chat-service/internal/types"
      required: true

  schemas:
    # Common.

    GetChatHistoryResponse:
      properties:
        data:
          $ref: "#/components/schemas/MessagesPage"
        error:
          $ref: "#/components/schemas/Error"


    PostGetFreeHandsBtnAvailability:
      properties:
        data:
          $ref: "#/components/schemas/ManagerAvailability"
        error:
          $ref: "#/components/schemas/Error"

    PostFreeHands:
      properties:
        data:
          type: string
          nullable: true
        error:
          $ref: "#/components/schemas/Error"

    PostGetChats:
      properties:
        data:
          $ref: "#/components/schemas/ChatList"
        error:
          $ref: "#/components/schemas/Error"

    ManagerAvailability:
      properties:
        available:
          type: boolean

    ChatList:
      required: [chats]
      properties:
        chats:
          type: array
          items:
            $ref: '#/components/schemas/Chat'

    Chat:
      type: object
      required: [chatId, clientId]
      properties:
        chatId:
          type: string
          format: uuid
          x-go-type: types.ChatID
          x-go-type-import:
            path: "github.com/Pickausernaame/chat-service/internal/types"
        clientId:
          type: string
          format: uuid
          x-go-type: types.UserID
          x-go-type-import:
            path: "github.com/Pickausernaame/chat-service/internal/types"

    GetChatHistoryRequest:
      required: [chatId]
      properties:
        chatId:
          type: string
          format: uuid
          x-go-type: types.ChatID
          x-go-type-import:
            path: "github.com/Pickausernaame/chat-service/internal/types"
        pageSize:
          type: integer
          minimum: 10
          maximum: 100
        cursor:
          type: string



    MessagesPage:
      required: [ messages, next ]
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
        next:
          type: string

    Message:
      required: [ id, body, createdAt, authorId ]
      properties:
        id:
          type: string
          format: uuid
          x-go-type: types.MessageID
          x-go-type-import:
            path: "github.com/Pickausernaame/chat-service/internal/types"
        authorId:
          type: string
          format: uuid
          x-go-type: types.UserID
          x-go-type-import:
            path: "github.com/Pickausernaame/chat-service/internal/types"
        body:
          type: string
        createdAt:
          type: string
          format: date-time

    Error:
      required: [ message, code ]
      properties:
        code:
          $ref: "#/components/schemas/ErrorCode"
        message:
          type: string
        details:
          type: string

    ErrorCode:
      type: integer
      description: contains HTTP error codes and specific business logic error codes (the last must be >= 1000).
      enum: [ 5000 ]
      x-enum-varnames: [ ErrorCodeManagerOverloadedError ]
      minimum: 400
