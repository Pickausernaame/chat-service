// Code generated by options-gen. DO NOT EDIT.
package managerscheduler

import (
	fmt461e464ebed9 "fmt"
	"time"

	managerpool "github.com/Pickausernaame/chat-service/internal/services/manager-pool"
	errors461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/errors"
	validator461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/validator"
)

type OptOptionsSetter func(o *Options)

func NewOptions(
	period time.Duration,
	mngrPool managerpool.Pool,
	msgRepo messageRepository,
	outbox outbox,
	prbRepo problemRepository,
	txtr transactor,
	options ...OptOptionsSetter,
) Options {
	o := Options{}

	// Setting defaults from field tag (if present)

	o.period = period
	o.mngrPool = mngrPool
	o.msgRepo = msgRepo
	o.outbox = outbox
	o.prbRepo = prbRepo
	o.txtr = txtr

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func (o *Options) Validate() error {
	errs := new(errors461e464ebed9.ValidationErrors)
	errs.Add(errors461e464ebed9.NewValidationError("period", _validate_Options_period(o)))
	errs.Add(errors461e464ebed9.NewValidationError("mngrPool", _validate_Options_mngrPool(o)))
	errs.Add(errors461e464ebed9.NewValidationError("msgRepo", _validate_Options_msgRepo(o)))
	errs.Add(errors461e464ebed9.NewValidationError("outbox", _validate_Options_outbox(o)))
	errs.Add(errors461e464ebed9.NewValidationError("prbRepo", _validate_Options_prbRepo(o)))
	errs.Add(errors461e464ebed9.NewValidationError("txtr", _validate_Options_txtr(o)))
	return errs.AsError()
}

func _validate_Options_period(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.period, "min=100ms,max=1m"); err != nil {
		return fmt461e464ebed9.Errorf("field `period` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_mngrPool(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.mngrPool, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `mngrPool` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_msgRepo(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.msgRepo, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `msgRepo` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_outbox(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.outbox, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `outbox` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_prbRepo(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.prbRepo, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `prbRepo` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_txtr(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.txtr, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `txtr` did not pass the test: %w", err)
	}
	return nil
}
